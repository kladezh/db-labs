-- tsvector: Это тип данных, который представляет собой вектор терминов (слов),
-- извлеченных из текста. Содержит информацию о том, какие слова есть в тексте и с какой частотой.

-- tsquery: Это тип данных, представляющий собой запрос для полнотекстового поиска.
-- Он содержит условия, которые должны соответствовать тексту.

-- to_tsvector(): Функция, которая преобразует текст в тип tsvector.
-- Может быть настроена для поддержки различных языков и конфигураций.

-- to_tsquery(): Функция, которая создает запрос типа tsquery из текста запроса.

-- @@: Оператор, используемый для выполнения полнотекстового поиска.
-- Проверяет, соответствует ли tsvector запросу tsquery.

-- GIN/GIST индексы: Индексы, которые могут использоваться для ускорения полнотекстового поиска.

-- coalesce: используется для возврата первого ненулевого аргумента из списка. 
-- Если все аргументы равны NULL, она возвращает NULL.
-- Это полезно, когда вам нужно получить первое доступное значение из нескольких столбцов или выражений.
-- Пример:
SELECT COALESCE(null, 'Значение 1', 'Значение 2'); -- Вернет 'Значение 1'

-- 1
-- Создать таблицу с данными для полнотекстового поиска.

CREATE TABLE documents (
    document_id SERIAL PRIMARY KEY,
    author TEXT,
    title TEXT,
    publication_year INTEGER,
    article_type TEXT,
    content TEXT
);

-- Вставка разнообразных данных в таблицу documents
INSERT INTO documents (author, title, publication_year, article_type, content)
VALUES
    ('Иванов Иван Иванович', 'Статья о технологическом прогрессе в IT', 2021, 'Технология', 'Разбор последних трендов в мире IT и технологий.'),
    ('Петров Петр Петрович', 'Финансовый анализ крупных компаний', 2022, 'Финансы', 'Сравнительный анализ финансовых показателей крупных компаний.'),
    ('Сидоров Сидор Сидорович', 'Космические исследования: новые открытия', 2022, 'Наука', 'Описание последних открытий, сделанных в ходе космических исследований.'),
    ('Александров Александр Александрович', 'Инновации в дизайне интерьера', 2022, 'Дизайн', 'Подробный обзор новых идей и тенденций в дизайне интерьера.'),
    ('Кузнецова Екатерина Владимировна', 'Экологические проблемы современных городов', 2021, 'Экология', 'Анализ и предложения по решению проблем экологии в городах.'),
    ('Новиков Николай Николаевич', 'Искусство кулинарии: современные подходы', 2021, 'Кулинария', 'Рецепты и техники приготовления в современном кулинарном искусстве.'),
    ('Смирнова Анна Игоревна', 'Роль женщин в обществе: современные вызовы', 2022, 'Общество', 'Исследование влияния и вклада женщин в различные сферы общества.'),
    ('Белов Борис Борисович', 'Тайны древних цивилизаций', 2021, 'История', 'Раскрытие загадок, оставленных древними цивилизациями.'),
    ('Григорьева Галина Владимировна', 'Современные подходы в образовании', 2022, 'Образование', 'Анализ новых методов и подходов в образовании.'),
    ('Дмитриев Дмитрий Дмитриевич', 'Спортивные инновации в здоровье и фитнесе', 2022, 'Спорт', 'Новые технологии и подходы к здоровому образу жизни и фитнесу.');


-- 2
-- Создать столбец типа tsvector, выполнить его обновление.

ALTER TABLE documents
ADD COLUMN search_vector tsvector;

UPDATE documents
SET search_vector = to_tsvector('russian', coalesce(author, '') || ' ' || coalesce(title, '') || ' ' || coalesce(article_type, '') || ' ' || coalesce(content, ''));

-- 3
-- Создать индекс для полнотекстового поиска

CREATE INDEX text_search_idx
ON bigdata
USING gin(search_vector);

-- 4
-- Создать триггер для автоматического обновления столбца tsvector. Проверить работоспособность триггера.

CREATE OR REPLACE FUNCTION update_search_vector()
RETURNS TRIGGER AS $$
BEGIN
    NEW.search_vector :=
        to_tsvector('russian', NEW.text);
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;


CREATE TRIGGER bigdata_search_vector_update
BEFORE INSERT OR UPDATE ON bigdata
FOR EACH ROW
EXECUTE FUNCTION update_search_vector();


-- Просмотр данных после вставки (проверим, что search_vector обновлен)
SELECT * FROM documents WHERE title = 'Статья об исследовании технологического прогресса';

-- Обновление существующего документа (триггер также должен обновить search_vector)
UPDATE documents
SET content = 'Новое содержание документа.'
WHERE title = 'Статья об исследовании технологического прогресса';

-- Просмотр данных после обновления (проверим, что search_vector обновлен)
SELECT * FROM documents WHERE title = 'Статья об исследовании технологического прогресса';


-- 5
-- Создать свою конфигурацию. Проверить ее работоспособность.

CREATE TEXT SEARCH DICTIONARY russian_conf (
 TEMPLATE = ispell,
 DictFile = russian,
 AffFile = russian,
 StopWords = russian
);

CREATE TEXT SEARCH CONFIGURATION russian_search (copy=simple);

ALTER TEXT SEARCH CONFIGURATION russian_search ALTER MAPPING FOR word WITH russian;


-- 6
-- Выполнить несколько запросов на поиск данных с использованием оператора полнотекстового поиска. 
-- Данных в таблице должно быть много ( несколько глав книги, несколько страниц текста и т. д.)

-- Запрос ищет документы, в заголовке которых есть слова "научная" и "статья"
SELECT * FROM documents
WHERE tsvector_title @@ to_tsquery('russian', 'научная <-> статья');

-- Запрос для поиска документов автора "Иванов Иван Иванович" и с жанрами "Технология", "Наука":
SELECT * FROM documents
WHERE author = 'Иванов Иван Иванович'
  AND tsvector_title @@ to_tsquery('russian', 'Технология | Наука');

-- Создаем таблицу books
CREATE TABLE books (
    id serial PRIMARY KEY,
    title text,
    content text
);

-- Создаем индексы для полнотекстового поиска
CREATE INDEX idx_books_content ON books USING gin(to_tsvector('russian', content));
CREATE INDEX idx_books_title ON books USING gin(to_tsvector('russian', title));

INSERT INTO books (title, content)
VALUES
    ('Романтическая книга', 'Главный герой этой книги влюбляется в неожиданное приключение.'),
    ('Детективная книга', 'Расследование главного героя в этой книге полно волнующих событий.'),
    ('Фэнтези приключение', 'Волшебные существа и фантастические миры заполняют страницы этой книги.'),
    ('Научно-популярная книга', 'Описание увлекательных приключений основано на научных открытиях.'),
    ('Приключенческий боевик', 'Эпический боевик с главным героем, который сталкивается с невероятными вызовами.'),
    ('Тайный дневник', 'Главный персонаж ведет тайный дневник, раскрывая удивительные события своей жизни.');

-- Поиск книг, содержащих слова "фантастика" и "герой", но не содержащих слово "приключение"
SELECT title, content
FROM books
WHERE to_tsvector('russian', content) @@ to_tsquery('russian', 'фантастика & герой & !приключение');

-- Поиск книг с выделением ключевых слов "фантастика"
SELECT title, ts_headline('russian', content, plainto_tsquery('russian', 'фантастика')) as highlight
FROM books
WHERE to_tsvector('russian', content) @@ plainto_tsquery('russian', 'фантастика');

-- Поиск книг, соответствующих двум условиям: содержат слово "фантастика" и "волшебство"
SELECT title, content
FROM books
WHERE to_tsvector('russian', content) @@
  to_tsquery('russian', 'фантастика') AND
  to_tsvector('russian', content) @@
  to_tsquery('russian', 'волшебство');

SELECT * FROM ts_debug('russia', '
Был вечер. На небе мерцали звезды, словно драгоценные камни на черном бархате.
Среди тихой ночи шептались деревья, и в воздухе витал запах свежевыпеченного хлеба.
По улицам медленно прогуливались пары, держащиеся за руки. Свет фонарей создавал мягкое освещение,
приглушая контуры зданий. 

В это время года природа окутана таинственным покрывалом, словно сказочным покрывалом, 
которое приглушает звуки и придает всему вокруг загадочность. Луна взошла на небеса, 
будто страж ночи, внимательно следящая за происходящим на земле. В такие моменты хочется остановить время, 
насладиться мгновением и вдохнуть полную грудь свежего воздуха. Вечер был полон магии и тепла, 
словно дар природы для тех, кто умеет ценить красоту простых вещей.

Светлый месяц освещал тропинку в парке, и тени деревьев рисовали на дорожке узоры.
Вдалеке слышался легкий шум фонтана, будто пение природы. В вечерней тишине словно замирали все звуки,
и сердце наполнялось покоем. Мягкий ветерок ласкал лицо, принося с собой аромат цветов. Под ногами мягко шуршали опавшие листья,
словно ковер из золота. Сквозь листву проглядывали отдельные лучи луны,
создавая волшебное освещение. 
  
В этот вечер воздух пронизывал запах свежести и долгожданного дождя.
');

-- Лексический анализ текста на русском языке
SELECT * FROM ts_lexize('russia1', 'море волны песок');

-- Синтаксический анализ текста на русском языке
SELECT * FROM ts_parse('russia1', 'Текст для анализа на русском языке.');

-- Синтаксический анализ текста на английском языке
SELECT * FROM ts_parse('default', 'Wow, i like it!');

INSERT INTO books (title, content)
VALUES
    ('Глава 6', 'В тени вечерней лазури
Весело соловей поет,
И сближаются мгновенья,
Когда любовь в сердце поет.
1
Луна, в небесной величии,
Светит своим лучом нам,
И в саду полном магии
Звучит песня страстных драм.
2
Цветы качаются в весеннем ветре,
Лаская чувства нежных душ,
И в тайне мира, в сокровище лета,
Скрывается волшебный смысл.
3
Так вечер проходит, словно сказка,
Раскрывая душе тайны ночи,
И сердце наполняется сладким влеченьем,
Любви, как волшебства, прикоснитесь к нам.');








CREATE TABLE bigdata (
    id SERIAL PRIMARY KEY,
    text TEXT,
    search_vector tsvector
);


INSERT INTO bigdata(text) VALUES (
'Был вечер. На небе мерцали звезды, словно драгоценные камни на черном бархате.
Среди тихой ночи шептались деревья, и в воздухе витал запах свежевыпеченного хлеба.
По улицам медленно прогуливались пары, держащиеся за руки. Свет фонарей создавал мягкое освещение,
приглушая контуры зданий. 

В это время года природа окутана таинственным покрывалом, словно сказочным покрывалом, 
которое приглушает звуки и придает всему вокруг загадочность. Луна взошла на небеса, 
будто страж ночи, внимательно следящая за происходящим на земле. В такие моменты хочется остановить время, 
насладиться мгновением и вдохнуть полную грудь свежего воздуха. Вечер был полон магии и тепла, 
словно дар природы для тех, кто умеет ценить красоту простых вещей.

Светлый месяц освещал тропинку в парке, и тени деревьев рисовали на дорожке узоры.
Вдалеке слышался легкий шум фонтана, будто пение природы. В вечерней тишине словно замирали все звуки,
и сердце наполнялось покоем. Мягкий ветерок ласкал лицо, принося с собой аромат цветов. Под ногами мягко шуршали опавшие листья,
словно ковер из золота. Сквозь листву проглядывали отдельные лучи луны,
создавая волшебное освещение. 
  
В этот вечер воздух пронизывал запах свежести и долгожданного дождя.'
);



SELECT search_vector @@ to_tsquery('russian', 'воздух') FROM bigdata;

SELECT ts_headline((SELECT text FROM bigdata), to_tsquery('russian', 'воздух'));